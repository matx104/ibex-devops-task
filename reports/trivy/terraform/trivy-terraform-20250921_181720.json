2025-09-21T18:20:46Z	INFO	[misconfig] Misconfiguration scanning is enabled
2025-09-21T18:20:48Z	INFO	[terraform scanner] Scanning root module	file_path="."
2025-09-21T18:20:48Z	WARN	[terraform parser] Variable values were not found in the environment or variable files. Evaluating may not work correctly.	module="root" variables="public_key"
2025-09-21T18:20:48Z	INFO	[terraform scanner] Scanning root module	file_path="."
2025-09-21T18:20:48Z	INFO	Detected config files	num=2
{
  "SchemaVersion": 2,
  "CreatedAt": "2025-09-21T18:20:48.814843291Z",
  "ArtifactName": ".",
  "ArtifactType": "filesystem",
  "Results": [
    {
      "Target": ".",
      "Class": "config",
      "Type": "terraformplan-snapshot",
      "MisconfSummary": {
        "Successes": 62,
        "Failures": 0
      }
    },
    {
      "Target": "main.tf",
      "Class": "config",
      "Type": "terraformplan-snapshot",
      "MisconfSummary": {
        "Successes": 0,
        "Failures": 7
      },
      "Misconfigurations": [
        {
          "Type": "Terraform Plan Snapshot Security Check",
          "ID": "AVD-AWS-0028",
          "AVDID": "AVD-AWS-0028",
          "Title": "aws_instance should activate session tokens for Instance Metadata Service.",
          "Description": "IMDS v2 (Instance Metadata Service) introduced session authentication tokens which improve security when talking to IMDS.\n\nBy default \u003ccode\u003eaws_instance\u003c/code\u003e resource sets IMDS session auth tokens to be optional.\n\nTo fully protect IMDS you need to enable session tokens by using \u003ccode\u003emetadata_options\u003c/code\u003e block and its \u003ccode\u003ehttp_tokens\u003c/code\u003e variable set to \u003ccode\u003erequired\u003c/code\u003e.\n",
          "Message": "Instance does not require IMDS access to require a token.",
          "Namespace": "builtin.aws.ec2.aws0028",
          "Query": "data.builtin.aws.ec2.aws0028.deny",
          "Resolution": "Enable HTTP token requirement for IMDS",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0028",
          "References": [
            "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service",
            "https://avd.aquasec.com/misconfig/avd-aws-0028"
          ],
          "Status": "FAIL",
          "CauseMetadata": {
            "Resource": "aws_instance.docker_host",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 189,
            "EndLine": 217,
            "Code": {
              "Lines": [
                {
                  "Number": 189,
                  "Content": "resource \"aws_instance\" \"docker_host\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_instance\"\u001b[0m \u001b[38;5;37m\"docker_host\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 190,
                  "Content": "  ami                    = data.aws_ami.amazon_linux_2.id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mami\u001b[0m                    = \u001b[38;5;33mdata\u001b[0m.aws_ami.amazon_linux_2.id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 191,
                  "Content": "  instance_type          = var.instance_type",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245minstance_type\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.instance_type",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 192,
                  "Content": "  key_name              = aws_key_pair.ec2_key_pair.key_name",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mkey_name\u001b[0m              = aws_key_pair.ec2_key_pair.key_name",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 193,
                  "Content": "  vpc_security_group_ids = [aws_security_group.ec2_sg.id]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mvpc_security_group_ids\u001b[0m = [aws_security_group.ec2_sg.id]",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 194,
                  "Content": "  iam_instance_profile   = aws_iam_instance_profile.ec2_profile.name",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245miam_instance_profile\u001b[0m   = aws_iam_instance_profile.ec2_profile.name",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 195,
                  "Content": "  ",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;239m  ",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 196,
                  "Content": "  # User data script to install Docker",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  # User data script to install Docker",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 197,
                  "Content": "  user_data = base64encode(templatefile(\"${path.module}/scripts/user_data.sh\", {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m  \u001b[38;5;245muser_data\u001b[0m =\u001b[38;5;33m base64encode\u001b[0m(\u001b[38;5;33mtemplatefile\u001b[0m(\u001b[38;5;37m\"\u001b[0m\u001b[38;5;37m${\u001b[0mpath.\u001b[38;5;33mmodule\u001b[0m\u001b[38;5;37m}\u001b[0m\u001b[38;5;37m/scripts/user_data.sh\"\u001b[0m, {",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 198,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            }
          }
        },
        {
          "Type": "Terraform Plan Snapshot Security Check",
          "ID": "AVD-AWS-0088",
          "AVDID": "AVD-AWS-0088",
          "Title": "Unencrypted S3 bucket.",
          "Description": "S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.\n",
          "Message": "Bucket does not have encryption enabled",
          "Namespace": "builtin.aws.s3.aws0088",
          "Query": "data.builtin.aws.s3.aws0088.deny",
          "Resolution": "Configure bucket encryption",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0088",
          "References": [
            "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
            "https://avd.aquasec.com/misconfig/avd-aws-0088"
          ],
          "Status": "FAIL",
          "CauseMetadata": {
            "Resource": "aws_s3_bucket.artifacts",
            "Provider": "AWS",
            "Service": "s3",
            "StartLine": 95,
            "EndLine": 103,
            "Code": {
              "Lines": [
                {
                  "Number": 95,
                  "Content": "resource \"aws_s3_bucket\" \"artifacts\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_s3_bucket\"\u001b[0m \u001b[38;5;37m\"artifacts\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 96,
                  "Content": "  bucket = var.s3_bucket_name",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mbucket\u001b[0m = \u001b[38;5;33mvar\u001b[0m.s3_bucket_name",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 97,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 98,
                  "Content": "  tags = {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mtags\u001b[0m = {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 99,
                  "Content": "    Name        = \"${var.project_name}-artifacts\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    \u001b[38;5;245mName\u001b[0m        = \u001b[38;5;37m\"\u001b[0m\u001b[38;5;37m${\u001b[0m\u001b[38;5;33mvar\u001b[0m.project_name\u001b[38;5;37m}\u001b[0m\u001b[38;5;37m-artifacts\"",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 100,
                  "Content": "    Environment = var.environment",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m    \u001b[38;5;245mEnvironment\u001b[0m = \u001b[38;5;33mvar\u001b[0m.environment",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 101,
                  "Content": "    ManagedBy   = \"Terraform\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    \u001b[38;5;245mManagedBy\u001b[0m   = \u001b[38;5;37m\"Terraform\"",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 102,
                  "Content": "  }",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m  }",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 103,
                  "Content": "}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            }
          }
        },
        {
          "Type": "Terraform Plan Snapshot Security Check",
          "ID": "s3-bucket-logging",
          "AVDID": "AVD-AWS-0089",
          "Title": "S3 Bucket Logging",
          "Description": "Ensures S3 bucket logging is enabled for S3 buckets",
          "Message": "Bucket has logging disabled",
          "Namespace": "builtin.aws.s3.aws0089",
          "Query": "data.builtin.aws.s3.aws0089.deny",
          "Resolution": "Add a logging block to the resource to enable access logging",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/s3-bucket-logging",
          "References": [
            "https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerLogs.html",
            "https://docs.aws.amazon.com/AmazonS3/latest/userguide/enable-server-access-logging.html",
            "https://avd.aquasec.com/misconfig/s3-bucket-logging"
          ],
          "Status": "FAIL",
          "CauseMetadata": {
            "Resource": "aws_s3_bucket.artifacts",
            "Provider": "AWS",
            "Service": "s3",
            "StartLine": 95,
            "EndLine": 103,
            "Code": {
              "Lines": [
                {
                  "Number": 95,
                  "Content": "resource \"aws_s3_bucket\" \"artifacts\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_s3_bucket\"\u001b[0m \u001b[38;5;37m\"artifacts\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 96,
                  "Content": "  bucket = var.s3_bucket_name",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mbucket\u001b[0m = \u001b[38;5;33mvar\u001b[0m.s3_bucket_name",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 97,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 98,
                  "Content": "  tags = {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mtags\u001b[0m = {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 99,
                  "Content": "    Name        = \"${var.project_name}-artifacts\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    \u001b[38;5;245mName\u001b[0m        = \u001b[38;5;37m\"\u001b[0m\u001b[38;5;37m${\u001b[0m\u001b[38;5;33mvar\u001b[0m.project_name\u001b[38;5;37m}\u001b[0m\u001b[38;5;37m-artifacts\"",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 100,
                  "Content": "    Environment = var.environment",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m    \u001b[38;5;245mEnvironment\u001b[0m = \u001b[38;5;33mvar\u001b[0m.environment",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 101,
                  "Content": "    ManagedBy   = \"Terraform\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    \u001b[38;5;245mManagedBy\u001b[0m   = \u001b[38;5;37m\"Terraform\"",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 102,
                  "Content": "  }",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m  }",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 103,
                  "Content": "}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            }
          }
        },
        {
          "Type": "Terraform Plan Snapshot Security Check",
          "ID": "aws-vpc-no-public-egress-sgr",
          "AVDID": "AVD-AWS-0104",
          "Title": "A security group rule should not allow unrestricted egress to any IP address.",
          "Description": "Opening up ports to connect out to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that are explicitly required where possible.\n",
          "Message": "Security group rule allows unrestricted egress to any IP address.",
          "Namespace": "builtin.aws.ec2.aws0104",
          "Query": "data.builtin.aws.ec2.aws0104.deny",
          "Resolution": "Set a more restrictive cidr range",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-egress-sgr",
          "References": [
            "https://docs.aws.amazon.com/whitepapers/latest/building-scalable-secure-multi-vpc-network-infrastructure/centralized-egress-to-internet.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-egress-sgr"
          ],
          "Status": "FAIL",
          "CauseMetadata": {
            "Resource": "aws_security_group.ec2_sg",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 84,
            "EndLine": 84,
            "Code": {
              "Lines": [
                {
                  "Number": 58,
                  "Content": "resource \"aws_security_group\" \"ec2_sg\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_security_group\"\u001b[0m \u001b[38;5;37m\"ec2_sg\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 59,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 84,
                  "Content": "    cidr_blocks = [\"0.0.0.0/0\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m    \u001b[38;5;245mcidr_blocks\u001b[0m = [\u001b[38;5;37m\"0.0.0.0/0\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 91,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 92,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "egress",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 79,
                  "EndLine": 85
                }
              },
              {
                "Resource": "aws_security_group.ec2_sg",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 58,
                  "EndLine": 92
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Plan Snapshot Security Check",
          "ID": "AVD-AWS-0107",
          "AVDID": "AVD-AWS-0107",
          "Title": "Security groups should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "Security groups provide stateful filtering of ingress and egress network traffic to AWS\nresources. It is recommended that no security group allows unrestricted ingress access to\nremote server administration ports, such as SSH to port 22 and RDP to port 3389.\n",
          "Message": "Security group rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0107",
          "Query": "data.builtin.aws.ec2.aws0107.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0107",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-13",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-14",
            "https://avd.aquasec.com/misconfig/avd-aws-0107"
          ],
          "Status": "FAIL",
          "CauseMetadata": {
            "Resource": "aws_security_group.ec2_sg",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 68,
            "EndLine": 68,
            "Code": {
              "Lines": [
                {
                  "Number": 58,
                  "Content": "resource \"aws_security_group\" \"ec2_sg\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_security_group\"\u001b[0m \u001b[38;5;37m\"ec2_sg\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 59,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 68,
                  "Content": "    cidr_blocks = var.allowed_ssh_ips",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m    \u001b[38;5;245mcidr_blocks\u001b[0m = \u001b[38;5;33mvar\u001b[0m.allowed_ssh_ips",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 91,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 92,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "ingress",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 63,
                  "EndLine": 69
                }
              },
              {
                "Resource": "aws_security_group.ec2_sg",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 58,
                  "EndLine": 92
                }
              }
            ],
            "RenderedCause": {
              "Raw": "resource \"aws_security_group\" \"ec2_sg\" {\n  ingress {\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n}",
              "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_security_group\"\u001b[0m \u001b[38;5;37m\"ec2_sg\"\u001b[0m {\n  ingress {\n    \u001b[38;5;245mcidr_blocks\u001b[0m = [\u001b[38;5;37m\"0.0.0.0/0\"\u001b[0m]\n  }\n}"
            }
          }
        },
        {
          "Type": "Terraform Plan Snapshot Security Check",
          "ID": "AVD-AWS-0132",
          "AVDID": "AVD-AWS-0132",
          "Title": "S3 encryption should use Customer Managed Keys",
          "Description": "Encryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys.\n",
          "Message": "Bucket does not encrypt data with a customer managed key.",
          "Namespace": "builtin.aws.s3.aws0132",
          "Query": "data.builtin.aws.s3.aws0132.deny",
          "Resolution": "Enable encryption using customer managed keys",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0132",
          "References": [
            "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
            "https://avd.aquasec.com/misconfig/avd-aws-0132"
          ],
          "Status": "FAIL",
          "CauseMetadata": {
            "Resource": "aws_s3_bucket.artifacts",
            "Provider": "AWS",
            "Service": "s3",
            "StartLine": 95,
            "EndLine": 103,
            "Code": {
              "Lines": [
                {
                  "Number": 95,
                  "Content": "resource \"aws_s3_bucket\" \"artifacts\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_s3_bucket\"\u001b[0m \u001b[38;5;37m\"artifacts\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 96,
                  "Content": "  bucket = var.s3_bucket_name",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mbucket\u001b[0m = \u001b[38;5;33mvar\u001b[0m.s3_bucket_name",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 97,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 98,
                  "Content": "  tags = {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mtags\u001b[0m = {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 99,
                  "Content": "    Name        = \"${var.project_name}-artifacts\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    \u001b[38;5;245mName\u001b[0m        = \u001b[38;5;37m\"\u001b[0m\u001b[38;5;37m${\u001b[0m\u001b[38;5;33mvar\u001b[0m.project_name\u001b[38;5;37m}\u001b[0m\u001b[38;5;37m-artifacts\"",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 100,
                  "Content": "    Environment = var.environment",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m    \u001b[38;5;245mEnvironment\u001b[0m = \u001b[38;5;33mvar\u001b[0m.environment",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 101,
                  "Content": "    ManagedBy   = \"Terraform\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    \u001b[38;5;245mManagedBy\u001b[0m   = \u001b[38;5;37m\"Terraform\"",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 102,
                  "Content": "  }",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m  }",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 103,
                  "Content": "}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            }
          }
        },
        {
          "Type": "Terraform Plan Snapshot Security Check",
          "ID": "AVD-AWS-0143",
          "AVDID": "AVD-AWS-0143",
          "Title": "IAM policies should not be granted directly to users.",
          "Description": "CIS recommends that you apply IAM policies directly to groups and roles but not users. Assigning privileges at the group or role level reduces the complexity of access management as the number of users grow. Reducing access management complexity might in turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.\n",
          "Message": "One or more policies are attached directly to a user",
          "Namespace": "builtin.aws.iam.aws0143",
          "Query": "data.builtin.aws.iam.aws0143.deny",
          "Resolution": "Grant policies at the group level instead.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0143",
          "References": [
            "https://console.aws.amazon.com/iam/",
            "https://avd.aquasec.com/misconfig/avd-aws-0143"
          ],
          "Status": "FAIL",
          "CauseMetadata": {
            "Resource": "aws_iam_user.cicd_user[0]",
            "Provider": "AWS",
            "Service": "iam",
            "StartLine": 236,
            "EndLine": 245,
            "Code": {
              "Lines": [
                {
                  "Number": 236,
                  "Content": "resource \"aws_iam_user\" \"cicd_user\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_iam_user\"\u001b[0m \u001b[38;5;37m\"cicd_user\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 237,
                  "Content": "  count = var.create_iam_user ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = \u001b[38;5;33mvar\u001b[0m.create_iam_user \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 238,
                  "Content": "  name  = \"${var.project_name}-cicd-user\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m  \u001b[38;5;245mname\u001b[0m  = \u001b[38;5;37m\"\u001b[0m\u001b[38;5;37m${\u001b[0m\u001b[38;5;33mvar\u001b[0m.project_name\u001b[38;5;37m}\u001b[0m\u001b[38;5;37m-cicd-user\"",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "  tags = {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mtags\u001b[0m = {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 241,
                  "Content": "    Name        = \"${var.project_name}-cicd-user\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    \u001b[38;5;245mName\u001b[0m        = \u001b[38;5;37m\"\u001b[0m\u001b[38;5;37m${\u001b[0m\u001b[38;5;33mvar\u001b[0m.project_name\u001b[38;5;37m}\u001b[0m\u001b[38;5;37m-cicd-user\"",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 242,
                  "Content": "    Environment = var.environment",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m    \u001b[38;5;245mEnvironment\u001b[0m = \u001b[38;5;33mvar\u001b[0m.environment",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 243,
                  "Content": "    ManagedBy   = \"Terraform\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    \u001b[38;5;245mManagedBy\u001b[0m   = \u001b[38;5;37m\"Terraform\"",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 244,
                  "Content": "  }",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m  }",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 245,
                  "Content": "}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            }
          }
        }
      ]
    }
  ]
}
