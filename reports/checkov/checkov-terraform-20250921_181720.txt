
       _               _
   ___| |__   ___  ___| | _______   __
  / __| '_ \ / _ \/ __| |/ / _ \ \ / /
 | (__| | | |  __/ (__|   < (_) \ V /
  \___|_| |_|\___|\___|_|\_\___/ \_/

By Prisma Cloud | version: 3.2.471 

terraform scan results:

Passed checks: 35, Failed checks: 15, Skipped checks: 0

Check: CKV_AWS_386: "Reduce potential for WhoAMI cloud image name confusion attack"
	PASSED for resource: aws_ami.amazon_linux_2
	File: /main.tf:220-233
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-supply-chain-policies/bc-aws-386
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.ec2_sg
	File: /main.tf:58-92
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_23: "Ensure every security group and rule has a description"
	PASSED for resource: aws_security_group.ec2_sg
	File: /main.tf:58-92
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31
Check: CKV_AWS_277: "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1"
	PASSED for resource: aws_security_group.ec2_sg
	File: /main.tf:58-92
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports
Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket.artifacts
	File: /main.tf:95-103
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24
Check: CKV_AWS_56: "Ensure S3 bucket has 'restrict_public_buckets' enabled"
	PASSED for resource: aws_s3_bucket_public_access_block.artifacts
	File: /main.tf:106-113
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-22
Check: CKV_AWS_54: "Ensure S3 bucket has block public policy enabled"
	PASSED for resource: aws_s3_bucket_public_access_block.artifacts
	File: /main.tf:106-113
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-20
Check: CKV_AWS_55: "Ensure S3 bucket has ignore public ACLs enabled"
	PASSED for resource: aws_s3_bucket_public_access_block.artifacts
	File: /main.tf:106-113
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-21
Check: CKV_AWS_53: "Ensure S3 bucket has block public ACLS enabled"
	PASSED for resource: aws_s3_bucket_public_access_block.artifacts
	File: /main.tf:106-113
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-19
Check: CKV_AWS_61: "Ensure AWS IAM policy does not allow assume role permission across all services"
	PASSED for resource: aws_iam_role.ec2_role
	File: /main.tf:125-146
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_274: "Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy"
	PASSED for resource: aws_iam_role.ec2_role
	File: /main.tf:125-146
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-274
Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: aws_iam_role.ec2_role
	File: /main.tf:125-146
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-44
Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_role_policy.ec2_s3_policy
	File: /main.tf:149-180
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-48
Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_role_policy.ec2_s3_policy
	File: /main.tf:149-180
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	PASSED for resource: aws_instance.docker_host
	File: /main.tf:189-217
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-13
Check: CKV_AWS_46: "Ensure no hard-coded secrets exist in EC2 user data"
	PASSED for resource: aws_instance.docker_host
	File: /main.tf:189-217
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-1
Check: CKV_AWS_88: "EC2 instance should not have public IP."
	PASSED for resource: aws_instance.docker_host
	File: /main.tf:189-217
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-12
Check: CKV_AWS_348: "Ensure IAM root user does not have Access keys"
	PASSED for resource: aws_iam_access_key.cicd_user[0]
	File: /main.tf:247-250
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-348
Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_user_policy.cicd_policy[0]
	File: /main.tf:253-311
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-48
Check: CKV_AWS_289: "Ensure IAM policies does not allow permissions management / resource exposure without constraints"
	PASSED for resource: aws_iam_user_policy.cicd_policy[0]
	File: /main.tf:253-311
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-289
Check: CKV_AWS_286: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: aws_iam_user_policy.cicd_policy[0]
	File: /main.tf:253-311
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-286
Check: CKV_AWS_287: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: aws_iam_user_policy.cicd_policy[0]
	File: /main.tf:253-311
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-287
Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_user_policy.cicd_policy[0]
	File: /main.tf:253-311
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45
Check: CKV_AWS_288: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: aws_iam_user_policy.cicd_policy[0]
	File: /main.tf:253-311
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-288
Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /main.tf:17-19
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5
Check: CKV_AWS_57: "S3 Bucket has an ACL defined which allows public WRITE access."
	PASSED for resource: aws_s3_bucket.artifacts
	File: /main.tf:95-103
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-2-acl-write-permissions-everyone
Check: CKV2_AWS_6: "Ensure that S3 bucket has a Public Access block"
	PASSED for resource: aws_s3_bucket.artifacts
	File: /main.tf:95-103
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached
Check: CKV2_AWS_22: "Ensure an IAM User does not have access to the console"
	PASSED for resource: aws_iam_user.cicd_user[0]
	File: /main.tf:236-245
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-an-iam-user-does-not-have-access-to-the-console-group
Check: CKV2_AWS_56: "Ensure AWS Managed IAMFullAccess IAM policy is not used."
	PASSED for resource: aws_iam_role.ec2_role
	File: /main.tf:125-146
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-56
Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	PASSED for resource: aws_security_group.ec2_sg
	File: /main.tf:58-92
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis
Check: CKV_AWS_20: "S3 Bucket has an ACL defined which allows public READ access."
	PASSED for resource: aws_s3_bucket.artifacts
	File: /main.tf:95-103
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-1-acl-read-permissions-everyone
Check: CKV_AWS_19: "Ensure all data stored in the S3 bucket is securely encrypted at rest"
	PASSED for resource: aws_s3_bucket.artifacts
	File: /main.tf:95-103
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-14-data-encrypted-at-rest
Check: CKV2_AWS_41: "Ensure an IAM role is attached to EC2 instance"
	PASSED for resource: aws_instance.docker_host
	File: /main.tf:189-217
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-an-iam-role-is-attached-to-ec2-instance
Check: CKV_AWS_21: "Ensure all data stored in the S3 bucket have versioning enabled"
	PASSED for resource: aws_s3_bucket.artifacts
	File: /main.tf:95-103
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning
Check: CKV2_AWS_40: "Ensure AWS IAM policy does not allow full IAM privileges"
	PASSED for resource: aws_iam_user_policy.cicd_policy[0]
	File: /main.tf:253-311
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-40
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	FAILED for resource: aws_security_group.ec2_sg
	File: /main.tf:58-92
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security

		58 | resource "aws_security_group" "ec2_sg" {
		59 |   name        = "${var.project_name}-ec2-sg"
		60 |   description = "Security group for EC2 instance"
		61 |   vpc_id      = data.aws_vpc.default.id
		62 | 
		63 |   ingress {
		64 |     description = "SSH from allowed IPs"
		65 |     from_port   = 22
		66 |     to_port     = 22
		67 |     protocol    = "tcp"
		68 |     cidr_blocks = var.allowed_ssh_ips
		69 |   }
		70 | 
		71 |   ingress {
		72 |     description = "HTTP from anywhere"
		73 |     from_port   = 80
		74 |     to_port     = 80
		75 |     protocol    = "tcp"
		76 |     cidr_blocks = ["0.0.0.0/0"]
		77 |   }
		78 | 
		79 |   egress {
		80 |     description = "Allow all outbound traffic"
		81 |     from_port   = 0
		82 |     to_port     = 0
		83 |     protocol    = "-1"
		84 |     cidr_blocks = ["0.0.0.0/0"]
		85 |   }
		86 | 
		87 |   tags = {
		88 |     Name        = "${var.project_name}-ec2-sg"
		89 |     Environment = var.environment
		90 |     ManagedBy   = "Terraform"
		91 |   }
		92 | }

Check: CKV_AWS_382: "Ensure no security groups allow egress from 0.0.0.0:0 to port -1"
	FAILED for resource: aws_security_group.ec2_sg
	File: /main.tf:58-92
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		58 | resource "aws_security_group" "ec2_sg" {
		59 |   name        = "${var.project_name}-ec2-sg"
		60 |   description = "Security group for EC2 instance"
		61 |   vpc_id      = data.aws_vpc.default.id
		62 | 
		63 |   ingress {
		64 |     description = "SSH from allowed IPs"
		65 |     from_port   = 22
		66 |     to_port     = 22
		67 |     protocol    = "tcp"
		68 |     cidr_blocks = var.allowed_ssh_ips
		69 |   }
		70 | 
		71 |   ingress {
		72 |     description = "HTTP from anywhere"
		73 |     from_port   = 80
		74 |     to_port     = 80
		75 |     protocol    = "tcp"
		76 |     cidr_blocks = ["0.0.0.0/0"]
		77 |   }
		78 | 
		79 |   egress {
		80 |     description = "Allow all outbound traffic"
		81 |     from_port   = 0
		82 |     to_port     = 0
		83 |     protocol    = "-1"
		84 |     cidr_blocks = ["0.0.0.0/0"]
		85 |   }
		86 | 
		87 |   tags = {
		88 |     Name        = "${var.project_name}-ec2-sg"
		89 |     Environment = var.environment
		90 |     ManagedBy   = "Terraform"
		91 |   }
		92 | }

Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	FAILED for resource: aws_security_group.ec2_sg
	File: /main.tf:58-92
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80

		58 | resource "aws_security_group" "ec2_sg" {
		59 |   name        = "${var.project_name}-ec2-sg"
		60 |   description = "Security group for EC2 instance"
		61 |   vpc_id      = data.aws_vpc.default.id
		62 | 
		63 |   ingress {
		64 |     description = "SSH from allowed IPs"
		65 |     from_port   = 22
		66 |     to_port     = 22
		67 |     protocol    = "tcp"
		68 |     cidr_blocks = var.allowed_ssh_ips
		69 |   }
		70 | 
		71 |   ingress {
		72 |     description = "HTTP from anywhere"
		73 |     from_port   = 80
		74 |     to_port     = 80
		75 |     protocol    = "tcp"
		76 |     cidr_blocks = ["0.0.0.0/0"]
		77 |   }
		78 | 
		79 |   egress {
		80 |     description = "Allow all outbound traffic"
		81 |     from_port   = 0
		82 |     to_port     = 0
		83 |     protocol    = "-1"
		84 |     cidr_blocks = ["0.0.0.0/0"]
		85 |   }
		86 | 
		87 |   tags = {
		88 |     Name        = "${var.project_name}-ec2-sg"
		89 |     Environment = var.environment
		90 |     ManagedBy   = "Terraform"
		91 |   }
		92 | }

Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.docker_host
	File: /main.tf:189-217
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized

		189 | resource "aws_instance" "docker_host" {
		190 |   ami                    = data.aws_ami.amazon_linux_2.id
		191 |   instance_type          = var.instance_type
		192 |   key_name              = aws_key_pair.ec2_key_pair.key_name
		193 |   vpc_security_group_ids = [aws_security_group.ec2_sg.id]
		194 |   iam_instance_profile   = aws_iam_instance_profile.ec2_profile.name
		195 |   
		196 |   # User data script to install Docker
		197 |   user_data = base64encode(templatefile("${path.module}/scripts/user_data.sh", {
		198 |     s3_bucket = aws_s3_bucket.artifacts.id
		199 |   }))
		200 | 
		201 |   root_block_device {
		202 |     volume_size = 20
		203 |     volume_type = "gp3"
		204 |     encrypted   = true
		205 |   }
		206 | 
		207 |   tags = {
		208 |     Name        = "${var.project_name}-docker-host"
		209 |     Environment = var.environment
		210 |     ManagedBy   = "Terraform"
		211 |   }
		212 | 
		213 |   # Create a provisioner to save instance details
		214 |   provisioner "local-exec" {
		215 |     command = "echo ${self.public_ip} > instance_ip.txt"
		216 |   }
		217 | }

Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.docker_host
	File: /main.tf:189-217
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		189 | resource "aws_instance" "docker_host" {
		190 |   ami                    = data.aws_ami.amazon_linux_2.id
		191 |   instance_type          = var.instance_type
		192 |   key_name              = aws_key_pair.ec2_key_pair.key_name
		193 |   vpc_security_group_ids = [aws_security_group.ec2_sg.id]
		194 |   iam_instance_profile   = aws_iam_instance_profile.ec2_profile.name
		195 |   
		196 |   # User data script to install Docker
		197 |   user_data = base64encode(templatefile("${path.module}/scripts/user_data.sh", {
		198 |     s3_bucket = aws_s3_bucket.artifacts.id
		199 |   }))
		200 | 
		201 |   root_block_device {
		202 |     volume_size = 20
		203 |     volume_type = "gp3"
		204 |     encrypted   = true
		205 |   }
		206 | 
		207 |   tags = {
		208 |     Name        = "${var.project_name}-docker-host"
		209 |     Environment = var.environment
		210 |     ManagedBy   = "Terraform"
		211 |   }
		212 | 
		213 |   # Create a provisioner to save instance details
		214 |   provisioner "local-exec" {
		215 |     command = "echo ${self.public_ip} > instance_ip.txt"
		216 |   }
		217 | }

Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.docker_host
	File: /main.tf:189-217
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-31

		189 | resource "aws_instance" "docker_host" {
		190 |   ami                    = data.aws_ami.amazon_linux_2.id
		191 |   instance_type          = var.instance_type
		192 |   key_name              = aws_key_pair.ec2_key_pair.key_name
		193 |   vpc_security_group_ids = [aws_security_group.ec2_sg.id]
		194 |   iam_instance_profile   = aws_iam_instance_profile.ec2_profile.name
		195 |   
		196 |   # User data script to install Docker
		197 |   user_data = base64encode(templatefile("${path.module}/scripts/user_data.sh", {
		198 |     s3_bucket = aws_s3_bucket.artifacts.id
		199 |   }))
		200 | 
		201 |   root_block_device {
		202 |     volume_size = 20
		203 |     volume_type = "gp3"
		204 |     encrypted   = true
		205 |   }
		206 | 
		207 |   tags = {
		208 |     Name        = "${var.project_name}-docker-host"
		209 |     Environment = var.environment
		210 |     ManagedBy   = "Terraform"
		211 |   }
		212 | 
		213 |   # Create a provisioner to save instance details
		214 |   provisioner "local-exec" {
		215 |     command = "echo ${self.public_ip} > instance_ip.txt"
		216 |   }
		217 | }

Check: CKV_AWS_273: "Ensure access is controlled through SSO and not AWS IAM defined users"
	FAILED for resource: aws_iam_user.cicd_user[0]
	File: /main.tf:236-245
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-273

		236 | resource "aws_iam_user" "cicd_user" {
		237 |   count = var.create_iam_user ? 1 : 0
		238 |   name  = "${var.project_name}-cicd-user"
		239 | 
		240 |   tags = {
		241 |     Name        = "${var.project_name}-cicd-user"
		242 |     Environment = var.environment
		243 |     ManagedBy   = "Terraform"
		244 |   }
		245 | }

Check: CKV_AWS_355: "Ensure no IAM policies documents allow "*" as a statement's resource for restrictable actions"
	FAILED for resource: aws_iam_user_policy.cicd_policy[0]
	File: /main.tf:253-311
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-355

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	FAILED for resource: aws_iam_user_policy.cicd_policy[0]
	File: /main.tf:253-311
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-16-iam-policy-privileges-1

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_290: "Ensure IAM policies does not allow write access without constraints"
	FAILED for resource: aws_iam_user_policy.cicd_policy[0]
	File: /main.tf:253-311
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-290

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: aws_s3_bucket.artifacts
	File: /main.tf:95-103
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging

		95  | resource "aws_s3_bucket" "artifacts" {
		96  |   bucket = var.s3_bucket_name
		97  | 
		98  |   tags = {
		99  |     Name        = "${var.project_name}-artifacts"
		100 |     Environment = var.environment
		101 |     ManagedBy   = "Terraform"
		102 |   }
		103 | }

Check: CKV2_AWS_62: "Ensure S3 buckets should have event notifications enabled"
	FAILED for resource: aws_s3_bucket.artifacts
	File: /main.tf:95-103
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62

		95  | resource "aws_s3_bucket" "artifacts" {
		96  |   bucket = var.s3_bucket_name
		97  | 
		98  |   tags = {
		99  |     Name        = "${var.project_name}-artifacts"
		100 |     Environment = var.environment
		101 |     ManagedBy   = "Terraform"
		102 |   }
		103 | }

Check: CKV_AWS_145: "Ensure that S3 buckets are encrypted with KMS by default"
	FAILED for resource: aws_s3_bucket.artifacts
	File: /main.tf:95-103
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		95  | resource "aws_s3_bucket" "artifacts" {
		96  |   bucket = var.s3_bucket_name
		97  | 
		98  |   tags = {
		99  |     Name        = "${var.project_name}-artifacts"
		100 |     Environment = var.environment
		101 |     ManagedBy   = "Terraform"
		102 |   }
		103 | }

Check: CKV_AWS_144: "Ensure that S3 bucket has cross-region replication enabled"
	FAILED for resource: aws_s3_bucket.artifacts
	File: /main.tf:95-103
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled

		95  | resource "aws_s3_bucket" "artifacts" {
		96  |   bucket = var.s3_bucket_name
		97  | 
		98  |   tags = {
		99  |     Name        = "${var.project_name}-artifacts"
		100 |     Environment = var.environment
		101 |     ManagedBy   = "Terraform"
		102 |   }
		103 | }

Check: CKV2_AWS_61: "Ensure that an S3 bucket has a lifecycle configuration"
	FAILED for resource: aws_s3_bucket.artifacts
	File: /main.tf:95-103
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61

		95  | resource "aws_s3_bucket" "artifacts" {
		96  |   bucket = var.s3_bucket_name
		97  | 
		98  |   tags = {
		99  |     Name        = "${var.project_name}-artifacts"
		100 |     Environment = var.environment
		101 |     ManagedBy   = "Terraform"
		102 |   }
		103 | }


